<!-- products/index.ejs -->
<%- include('partials/head', { title: 'Data' }) %>

<head>
    <script src="https://d3js.org/d3.v7.min.js"></script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Helper: draw a single line chart in a container
        function drawLineChart(containerId, data, color, title) {
          const width = 800, height = 400, margin = { top: 40, right: 60, bottom: 50, left: 60 };
          const svg = d3.select(containerId)
            .append("svg")
            .attr("width", width)
            .attr("height", height);
    
          const chart = svg.append("g")
            .attr("transform", `translate(${margin.left},${margin.top})`);
    
          const chartWidth = width - margin.left - margin.right;
          const chartHeight = height - margin.top - margin.bottom;
    
          const xScale = d3.scaleTime()
            .domain(d3.extent(data, d => d.time))
            .range([0, chartWidth]);
    
          const yScale = d3.scaleLinear()
            .domain([0, d3.max(data, d => d.reading)])
            .range([chartHeight, 0]);
    
          const line = d3.line()
            .x(d => xScale(d.time))
            .y(d => yScale(d.reading));
    
          chart.append("path")
            .datum(data)
            .attr("fill", "none")
            .attr("stroke", color)
            .attr("stroke-width", 2)
            .attr("d", line);
    
          // Axes
          chart.append("g")
            .attr("transform", `translate(0, ${chartHeight})`)
            .call(d3.axisBottom(xScale).ticks(4));
          chart.append("g")
            .call(d3.axisLeft(yScale).ticks(5));
    
          // Title
          svg.append("text")
            .attr("x", width / 2)
            .attr("y", 20)
            .attr("text-anchor", "middle")
            .style("font-size", "14px")
            .text(title);
        }
    
        // Parse data from EJS
        const rawData = <%- JSON.stringify(data) %>;
    
        function parseData(dataset) {
          return dataset.map(d => ({
            time: new Date(d.time_),
            reading: d.reading
          }));
        }
    
        drawLineChart("#chart-water", parseData(rawData.waterLevelData), "blue", "Water Level");
        drawLineChart("#chart-soil", parseData(rawData.soilMoistureData), "green", "Soil Moisture");
        drawLineChart("#chart-temp", parseData(rawData.tempData), "red", "Temperature");
        drawLineChart("#chart-humidity", parseData(rawData.humidityData), "purple", "Humidity");
      });
    </script>
</head>
<body>
<!-- sample data being displayed at the top of the page in human-readable form: -->

    <!-- <h2> <%=data.waterLevelData[0].reading %>, <%=data.waterLevelData[0].time_ %> </h2> -->
<div class="index-container2">
  <center>
    <span>
        <div class="landing-title">Soil Moisture vs. Time</div>
        <div class="landing-text">This chart tracks the soil moisture of our plant. The higher the value is, the drier the soil is. If it's above 100, the plant should automatically water itself. If it's below 60, the plant will be unable to be watered. If it's in between, feel free to click the "Water" button on the Info page to water the plant from afar!</div>
        <!-- "Works", but not fully: <input id="time-slider" type="range" min="2025-01-01" max="2026-01-01" step="5" value="2025-01-01" style="width: 600px; margin-bottom: 10px;"> -->
        <div id="chart-soil"></div>
        <div class="landing-title">Water Level vs. Time</div>
        <div class="landing-text">This chart tracks the water level for our plant.</div>
        <div id="chart-water"></div>
        <div class="landing-title">Temperature vs. Time</div>
        <div class="landing-text">This chart tracks the surrounding temperature of our plant.</div>
        <div id="chart-temp"></div>
        <div class="landing-title">Humidity vs. Time</div>
        <div class="landing-text">This chart tracks the surrounding humidity of our plant.</div>
        <div id="chart-humidity"></div>    
    </span>
  </center>

</div>
</body>
